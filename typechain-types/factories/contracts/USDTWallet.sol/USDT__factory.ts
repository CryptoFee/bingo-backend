/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  USDT,
  USDTInterface,
} from "../../../contracts/USDTWallet.sol/USDT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600681526020017f54657468657200000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f555344540000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000324565b508060049081620000a1919062000324565b5050506200040b565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012c57607f821691505b602082108103620001425762000141620000e4565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001ac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200016d565b620001b886836200016d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000205620001ff620001f984620001d0565b620001da565b620001d0565b9050919050565b6000819050919050565b6200022183620001e4565b6200023962000230826200020c565b8484546200017a565b825550505050565b600090565b6200025062000241565b6200025d81848462000216565b505050565b5b8181101562000285576200027960008262000246565b60018101905062000263565b5050565b601f821115620002d4576200029e8162000148565b620002a9846200015d565b81016020851015620002b9578190505b620002d1620002c8856200015d565b83018262000262565b50505b505050565b600082821c905092915050565b6000620002f960001984600802620002d9565b1980831691505092915050565b6000620003148383620002e6565b9150826002028217905092915050565b6200032f82620000aa565b67ffffffffffffffff8111156200034b576200034a620000b5565b5b62000357825462000113565b6200036482828562000289565b600060209050601f8311600181146200039c576000841562000387578287015190505b62000393858262000306565b86555062000403565b601f198416620003ac8662000148565b60005b82811015620003d657848901518255600182019150602085019450602081019050620003af565b86831015620003f65784890151620003f2601f891682620002e6565b8355505b6001600288020188555050505b505050505050565b6118f4806200041b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806340c10f191161008c5780639dc29fac116100665780639dc29fac14610228578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806340c10f19146101be57806370a08231146101da57806395d89b411461020a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170578063395093511461018e575b600080fd5b6100dc6102d4565b6040516100e99190610faf565b60405180910390f35b61010c6004803603810190610107919061106a565b610366565b60405161011991906110c5565b60405180910390f35b61012a610389565b60405161013791906110ef565b60405180910390f35b61015a6004803603810190610155919061110a565b610393565b60405161016791906110c5565b60405180910390f35b610178610417565b6040516101859190611179565b60405180910390f35b6101a860048036038101906101a3919061106a565b610420565b6040516101b591906110c5565b60405180910390f35b6101d860048036038101906101d3919061106a565b610457565b005b6101f460048036038101906101ef9190611194565b610465565b60405161020191906110ef565b60405180910390f35b6102126104ad565b60405161021f9190610faf565b60405180910390f35b610242600480360381019061023d919061106a565b61053f565b005b61025e6004803603810190610259919061106a565b61054d565b60405161026b91906110c5565b60405180910390f35b61028e6004803603810190610289919061106a565b6105c4565b60405161029b91906110c5565b60405180910390f35b6102be60048036038101906102b991906111c1565b610646565b6040516102cb91906110ef565b60405180910390f35b6060600380546102e390611230565b80601f016020809104026020016040519081016040528092919081815260200182805461030f90611230565b801561035c5780601f106103315761010080835404028352916020019161035c565b820191906000526020600020905b81548152906001019060200180831161033f57829003601f168201915b5050505050905090565b6000806103716106cd565b905061037e8185856106d5565b600191505092915050565b6000600254905090565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103fa906112d3565b60405180910390fd5b61040e84848461089e565b90509392505050565b60006006905090565b60008061042b6106cd565b905061044c81858561043d8589610646565b6104479190611322565b6106d5565b600191505092915050565b61046182826108cd565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104bc90611230565b80601f01602080910402602001604051908101604052809291908181526020018280546104e890611230565b80156105355780601f1061050a57610100808354040283529160200191610535565b820191906000526020600020905b81548152906001019060200180831161051857829003601f168201915b5050505050905090565b6105498282610a23565b5050565b6000806105586106cd565b905060006105668286610646565b9050838110156105ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a2906113c8565b60405180910390fd5b6105b882868684036106d5565b60019250505092915050565b60003073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610634576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062b906112d3565b60405180910390fd5b61063e8383610bf0565b905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b9061145a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107aa906114ec565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161089191906110ef565b60405180910390a3505050565b6000806108a96106cd565b90506108b6858285610c13565b6108c1858585610c9f565b60019150509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361093c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093390611558565b60405180910390fd5b61094860008383610f15565b806002600082825461095a9190611322565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a0b91906110ef565b60405180910390a3610a1f60008383610f1a565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a89906115ea565b60405180910390fd5b610a9e82600083610f15565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1b9061167c565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd791906110ef565b60405180910390a3610beb83600084610f1a565b505050565b600080610bfb6106cd565b9050610c08818585610c9f565b600191505092915050565b6000610c1f8484610646565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c995781811015610c8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c82906116e8565b60405180910390fd5b610c9884848484036106d5565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d059061177a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d749061180c565b60405180910390fd5b610d88838383610f15565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e059061189e565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610efc91906110ef565b60405180910390a3610f0f848484610f1a565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f59578082015181840152602081019050610f3e565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f8182610f1f565b610f8b8185610f2a565b9350610f9b818560208601610f3b565b610fa481610f65565b840191505092915050565b60006020820190508181036000830152610fc98184610f76565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100182610fd6565b9050919050565b61101181610ff6565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b6000819050919050565b61104781611034565b811461105257600080fd5b50565b6000813590506110648161103e565b92915050565b6000806040838503121561108157611080610fd1565b5b600061108f8582860161101f565b92505060206110a085828601611055565b9150509250929050565b60008115159050919050565b6110bf816110aa565b82525050565b60006020820190506110da60008301846110b6565b92915050565b6110e981611034565b82525050565b600060208201905061110460008301846110e0565b92915050565b60008060006060848603121561112357611122610fd1565b5b60006111318682870161101f565b93505060206111428682870161101f565b925050604061115386828701611055565b9150509250925092565b600060ff82169050919050565b6111738161115d565b82525050565b600060208201905061118e600083018461116a565b92915050565b6000602082840312156111aa576111a9610fd1565b5b60006111b88482850161101f565b91505092915050565b600080604083850312156111d8576111d7610fd1565b5b60006111e68582860161101f565b92505060206111f78582860161101f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061124857607f821691505b60208210810361125b5761125a611201565b5b50919050565b7f555344543a207472616e7366657220746f2074686520746f6b656e20636f6e7460008201527f7261637420616464726573730000000000000000000000000000000000000000602082015250565b60006112bd602c83610f2a565b91506112c882611261565b604082019050919050565b600060208201905081810360008301526112ec816112b0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061132d82611034565b915061133883611034565b92508282019050808211156113505761134f6112f3565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006113b2602583610f2a565b91506113bd82611356565b604082019050919050565b600060208201905081810360008301526113e1816113a5565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611444602483610f2a565b915061144f826113e8565b604082019050919050565b6000602082019050818103600083015261147381611437565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114d6602283610f2a565b91506114e18261147a565b604082019050919050565b60006020820190508181036000830152611505816114c9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611542601f83610f2a565b915061154d8261150c565b602082019050919050565b6000602082019050818103600083015261157181611535565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006115d4602183610f2a565b91506115df82611578565b604082019050919050565b60006020820190508181036000830152611603816115c7565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611666602283610f2a565b91506116718261160a565b604082019050919050565b6000602082019050818103600083015261169581611659565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006116d2601d83610f2a565b91506116dd8261169c565b602082019050919050565b60006020820190508181036000830152611701816116c5565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611764602583610f2a565b915061176f82611708565b604082019050919050565b6000602082019050818103600083015261179381611757565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006117f6602383610f2a565b91506118018261179a565b604082019050919050565b60006020820190508181036000830152611825816117e9565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611888602683610f2a565b91506118938261182c565b604082019050919050565b600060208201905081810360008301526118b78161187b565b905091905056fea264697066735822122064ed2937115712f558eecdd5384befe400d92038175b2c200b8c10e8f0c0049a64736f6c63430008120033";

type USDTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDT__factory extends ContractFactory {
  constructor(...args: USDTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<USDT> {
    return super.deploy(overrides || {}) as Promise<USDT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): USDT {
    return super.attach(address) as USDT;
  }
  override connect(signer: Signer): USDT__factory {
    return super.connect(signer) as USDT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDTInterface {
    return new utils.Interface(_abi) as USDTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): USDT {
    return new Contract(address, _abi, signerOrProvider) as USDT;
  }
}
