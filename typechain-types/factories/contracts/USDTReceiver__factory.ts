/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  USDTReceiver,
  USDTReceiverInterface,
} from "../../contracts/USDTReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdtTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "USDTReceived",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "acceptUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161051638038061051683398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610475806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063328fc4f81461005c5780633ea521ef146100665780638da5cb5b1461007957806398c77d1d146100a8578063a98ad46c146100bb575b600080fd5b6100646100ce565b005b610064610074366004610395565b610239565b60005461008c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100646100b6366004610395565b61029e565b60015461008c906001600160a01b031681565b6000546001600160a01b031633146101015760405162461bcd60e51b81526004016100f8906103ae565b60405180910390fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561014a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016e91906103fd565b60015460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350169063a9059cbb906044015b6020604051808303816000875af11580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea9190610416565b6102365760405162461bcd60e51b815260206004820152601760248201527f55534454207769746864726177616c206661696c65642e00000000000000000060448201526064016100f8565b50565b6000546001600160a01b031633146102635760405162461bcd60e51b81526004016100f8906103ae565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810184905291169063a9059cbb906044016101a7565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156102f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103199190610416565b61035d5760405162461bcd60e51b81526020600482015260156024820152742aa9a22a103a3930b739b332b9103330b4b632b21760591b60448201526064016100f8565b60405181815233907f2796405cc49bc8aca9149b78931c398159cef75486ac49c31c184dcbd7cea0559060200160405180910390a250565b6000602082840312156103a757600080fd5b5035919050565b6020808252602f908201527f4f6e6c792074686520636f6e7472616374206f776e65722063616e2063616c6c60408201526e103a3434b990333ab731ba34b7b71760891b606082015260800190565b60006020828403121561040f57600080fd5b5051919050565b60006020828403121561042857600080fd5b8151801515811461043857600080fd5b939250505056fea264697066735822122026c0d82f779880d65ec58b88daeabbc856a961387a72a697930b70412f57a8c264736f6c63430008130033";

type USDTReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: USDTReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class USDTReceiver__factory extends ContractFactory {
  constructor(...args: USDTReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdtTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<USDTReceiver> {
    return super.deploy(
      _usdtTokenAddress,
      overrides || {}
    ) as Promise<USDTReceiver>;
  }
  override getDeployTransaction(
    _usdtTokenAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_usdtTokenAddress, overrides || {});
  }
  override attach(address: string): USDTReceiver {
    return super.attach(address) as USDTReceiver;
  }
  override connect(signer: Signer): USDTReceiver__factory {
    return super.connect(signer) as USDTReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): USDTReceiverInterface {
    return new utils.Interface(_abi) as USDTReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): USDTReceiver {
    return new Contract(address, _abi, signerOrProvider) as USDTReceiver;
  }
}
