/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "participate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060005b6103e88110156100965773f39fd6e51aad88f6f4ce6ab8827279cfffb9226660008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808061008e906101e4565b915050610014565b506100de600080610384815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166100e360201b6101001760201c565b610288565b61017f816040516024016100f7919061026d565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061018260201b60201c565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b60006101ef826101da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610221576102206101ab565b5b600182019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102578261022c565b9050919050565b6102678161024c565b82525050565b6000602082019050610282600083018461025e565b92915050565b61035f806102976000396000f3fe60806040526004361061002d5760003560e01c8063365b98b214610039578063d11711a21461007657610034565b3661003457005b600080fd5b34801561004557600080fd5b50610060600480360381019061005b91906101fd565b610080565b60405161006d919061026b565b60405180910390f35b61007e6100b3565b005b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b683635c9adc5dea0000134116100fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f590610309565b60405180910390fd5b565b61019681604051602401610114919061026b565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610199565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b6101da816101c7565b81146101e557600080fd5b50565b6000813590506101f7816101d1565b92915050565b600060208284031215610213576102126101c2565b5b6000610221848285016101e8565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102558261022a565b9050919050565b6102658161024a565b82525050565b6000602082019050610280600083018461025c565b92915050565b600082825260208201905092915050565b7f50617274696369706174696f6e207072696365206d757374206265203120555360008201527f44542e0000000000000000000000000000000000000000000000000000000000602082015250565b60006102f3602383610286565b91506102fe82610297565b604082019050919050565b60006020820190508181036000830152610322816102e6565b905091905056fea264697066735822122089688b57ebcd689122c7ef55a07aadcc95908c04df3eef696fa6dc5fc7f19d2964736f6c63430008120033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  override connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
